#!/bin/bash
export MICROPROJECT_DIR=$HOME/src/parsegraph/microproject
source $MICROPROJECT_DIR/init.sh

if test $MICROPROJECT_DIR = $DEST_DIR; then
    echo "Microproject dir is the same; not copying files"
    exit
fi

# Files to always upgrade
UPGRADED_FILES="$UPGRADED_FILES `cat $MICROPROJECT_DIR/upgraded-files.txt`"

# Files to upgrade only when missing on dest
DEFAULT_FILES="$DEFAULT_FILES `cat $MICROPROJECT_DIR/default-files.txt`"

# Files to remove entirely
OBSOLETE_CONFIG="$OBSOLETE_CONFIG `cat $MICROPROJECT_DIR/obsolete-config.txt`"

for f in $UPGRADED_FILES; do
    if test -d $MICROPROJECT_DIR/$f; then
        mkdir -p $DEST_DIR/$f
        cp -r $MICROPROJECT_DIR/$f/* $DEST_DIR/$f
        find $DEST_DIR/$f -type f | xargs sed -i "s/TODO-PACKAGE-NAME/`basename $DEST_DIR`/g"
        git add $f
    elif test -f $MICROPROJECT_DIR/$f; then
        mkdir -p `dirname $DEST_DIR/$f`
        cp $MICROPROJECT_DIR/$f $DEST_DIR/$f
        sed -i "s/TODO-PACKAGE-NAME/`basename $DEST_DIR`/g" $f
        git add $f
    fi
done

if test ! -d $DEST_DIR/src; then
  mkdir -p src
fi

if test ! -f $DEST_DIR/src/index.ts; then
    if test -f $DEST_DIR/src/index.js; then
        git mv src/index.js src/index.ts
        git commit -m"Move index.js to index.ts"
    elif test -f $DEST_DIR/src/$DIST_NAME.ts; then
        git mv src/$DIST_NAME.ts src/index.ts
        git commit -m"Move $DIST_NAME.ts to index.ts"
    elif test -f $DEST_DIR/src/$DIST_NAME.js; then
        git mv src/$DIST_NAME.js src/index.ts
        git commit -m"Move $DIST_NAME.js to index.ts"
    else
        cp $MICROPROJECT_DIR/src/index.ts $DEST_DIR/src
        git add src/index.ts
        git commit -m"Add index.ts"
    fi
fi

if ! test -f $DEST_DIR/webpack.config.js && test -f $DEST_DIR/webpack.config.cjs; then
  git mv webpack.config.cjs webpack.config.js
  git commit -m"Move webpack.config.cjs to webpack.config.js"
fi
if ! test -f $DEST_DIR/webpack.prod.js && test -f $DEST_DIR/webpack.prod.cjs; then
  git mv webpack.prod.cjs webpack.prod.js
  git commit -m"Move webpack.prod.cjs to webpack.prod.js"
fi

for f in $DEFAULT_FILES; do
    if ! test -e $DEST_DIR/$f; then
        mkdir -p `dirname $DEST_DIR/$f`
        cp -i -r -u $MICROPROJECT_DIR/$f $DEST_DIR/$f
        sed -i "s/TODO-PACKAGE-NAME/`basename $DEST_DIR`/g" $f
        git add $f
    fi
done

for f in $OBSOLETE_CONFIG; do
    test ! -f $f || git rm $f
done

if ! git diff --cached --quiet; then
    git commit -m"Upgrade microproject files"
fi

if test ! -d $DEST_DIR/test || (test ! -f $DEST_DIR/test/test.js && test ! -f $DEST_DIR/test/test.ts); then
    echo "Making tests"
    mkdir -p $DEST_DIR/test
    cp -r $MICROPROJECT_DIR/test/test.ts $DEST_DIR/test
    git add test
    git commit -m"Add tests"
elif test -f $DEST_DIR/test/test.js && test ! -f $DEST_DIR/test/test.ts; then
    echo "Moving tests"
    git mv test/test.js test/test.ts
    git commit -m"Move test.js to test.ts"
fi

sed -i "s#../dist/parsegraph-$DIST_NAME#../src/index#g" $DEST_DIR/test/*
git add test
if ! git diff --cached --quiet; then
    git commit -m"Upgrade tests to use index"
fi

$MICROPROJECT_DIR/write-makefile.sh >$DEST_DIR/Makefile
git add $DEST_DIR/Makefile
if ! git diff --cached --quiet; then
    git commit -m"Update Makefile"
fi

$MICROPROJECT_DIR/upgrade-package-json
$MICROPROJECT_DIR/upgrade-webpack
